{
    "provider": {
        "name": "greetme_server_provider"
    },
    "consumer": {
        "name": "greetme_web_consumer"
    },
    "interactions": [
        {
            "description": "GET /greetings gets array containing greeting(s)",
            "request": {
                "method": "GET",
                "path": "/greetings"
            },
            "response": {
                "status": 200,
                "headers": {
                    "Content-Type": "application/json;charset=UTF-8"
                },
                "body": [
                    {
                        "id": 2,
                        "message": "Hello, Alice!"
                    }
                ],
                "matchingRules": {
                    "$.body[*].message": {
                        "regex": ".*, .*!"
                    },
                    "$.body": {
                        "min": 1,
                        "match": "type"
                    },
                    "$.body[*].id": {
                        "match": "type"
                    }
                }
            },
            "providerState": "at_least_one_greeting"
        },
        {
            "description": "POST /greetings creates greeting for person",
            "request": {
                "method": "POST",
                "path": "/greetings",
                "headers": {
                    "Content-Type": "application/json"
                },
                "body": {
                    "name": "Bob",
                    "nativeLanguageCode": "en"
                }
            },
            "response": {
                "status": 201,
                "headers": {
                    "Content-Type": "application/json;charset=UTF-8"
                },
                "body": {
                    "id": 1,
                    "message": "Hello, Bob!"
                },
                "matchingRules": {
                    "$.body.id": {
                        "match": "type"
                    }
                }
            }
        },
        {
            "description": "POST /greetings with empty body causes Bad Request (invalid JSON body)",
            "request": {
                "method": "POST",
                "path": "/greetings",
                "headers": {
                    "Content-Type": "application/json"
                },
                "body": ""
            },
            "response": {
                "status": 400,
                "headers": {
                    "Content-Type": "application/json;charset=UTF-8"
                },
                "body": {
                    "error_details": "Required request body is missing",
                    "error_id": "6ffefc8d-d9e7-4b76-bf14-c90391522066",
                    "error_message": "Invalid JSON body"
                },
                "matchingRules": {
                    "$.body.error_details": {
                        "regex": "Required request body is missing.*"
                    },
                    "$.body.error_id": {
                        "regex": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
                    }
                }
            }
        },
        {
            "description": "POST /greetings with invalid person data causes Bad Request (validation failed)",
            "request": {
                "method": "POST",
                "path": "/greetings",
                "headers": {
                    "Content-Type": "application/json"
                },
                "body": {
                    "name": "Mallory",
                    "nativeLanguageCode": "invalidLanguageCode"
                }
            },
            "response": {
                "status": 400,
                "headers": {
                    "Content-Type": "application/json;charset=UTF-8"
                },
                "body": {
                    "error_details": [
                        "nativeLanguageCode must be an ISO 639 language code"
                    ],
                    "error_id": "6ffefc8d-d9e7-4b76-bf14-c90391522066",
                    "error_message": "Validation failed"
                },
                "matchingRules": {
                    "$.body.error_id": {
                        "regex": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
                    }
                }
            }
        }
    ],
    "metadata": {
        "pact-specification": {
            "version": "3.0.0"
        },
        "pact-jvm": {
            "version": "3.3.8"
        }
    }
}